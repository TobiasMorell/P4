TestRobot: 
LOAD("WalkerBot") //Basic walk functionalitet som GoTo

NUM Count = 10 + 50
STRING Mystring = "This is a test string", Youstring = "String number two"
COORD Mycoord = (3,5,7)
LIST Mylist
//Mylist = Mylist + "item1" yet to be implemented
//Maybe LIST has []
BOOL Mybool = TRUE

VOID START()
    Move("West")
    Dig(4, TRUE, 150)
END START

//Miner bare i en retning i den specificerede længde

VOID StripMine(NUM Length)
    Count = 0
    REPEAT UNTIL (Count IS Length)
        Mine("NORTH")
        Move("South")
        Count = Count + 1
        Mystring = Count + Mystring
        Mybool = Mybool + Mystring
        Mystring = Mycoord + Mystring

        Mystring = Mystring + Count
    END REPEAT
END StripMine

COORD MineArea

/*HEAR Guardian (COORD enemyLocation)
    GoTo(enemyLocation)
    SIGNAL Guardian (enemyLocation)
END HEAR*/

//Tunnels er mængden af tunneller er 
/* Mine miner den originale tunnel, som alle de andre tunneller skal være på. Og styrer derudover 
hvor mange tunneller der skal mines osv */
VOID Dig(NUM Tunnels, BOOL BothSides, NUM Distance)
    NUM MinedTunnels = 0
    StripMine(Tunnels * 3)
    GoBack(Tunnels * 3)
    //Robot.Turn("Right")
    REPEAT UNTIL (MinedTunnels IS Tunnels)
        StripMine(150)
        IF (BothSides) 
            GoBack(150)
            StripMine(150)
        END IF
        GoBack(150)
        IF (BothSides)
            //Robot.Turn("Right")
        END IF
        ELSE IF (MinedTunnels IS Tunnels - 2)
            //Robot.BreakDance()

        END ELSEIF
        ELSE
            //Robot.Turn("Left")
        END ELSE
        //Robot.Move()
        //Robot.Move()
        //Robot.Move()
        //Robot.Turn("Left")
    END REPEAT
END Mine
    
VOID GoBack(NUM Length)
    Count = 0
    //Robot.Turn("Left")
    //Robot.Turn("Left")
    REPEAT UNTIL (Count IS Length)
        //Robot.Move()
        Count = Count + 1
    END REPEAT
END GoBack
